<?php


//NOTE: THIS IS ONLY A PARTIAL IMPLEMENTATION AND WILL BE FINISHED LATER


class		pudlArrayResult
	extends	pudlResult {




	////////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR
	////////////////////////////////////////////////////////////////////////////
	public function __construct(pudl $pudl, $array) {
		parent::__construct($pudl);

		if ($array instanceof pudlObject) {
			$array = $array->raw();

		} else if (!is_array($array)) {
			$array = (array) $array;
		}

		$this->array = $array;
	}




	////////////////////////////////////////////////////////////////////////////
	// FREE RESOURCES ASSOCIATED WITH THIS RESULT
	////////////////////////////////////////////////////////////////////////////
	public function free() {
		$this->array	= false;
		$this->pos		= 0;
	}




	////////////////////////////////////////////////////////////////////////////
	// GET A SINGLE CELL FROM THIS RESULT
	// TODO: CURRENTLY DOESN'T WORK
	////////////////////////////////////////////////////////////////////////////
	public function cell($row=0, $column=0) {
		return false;
	}




	////////////////////////////////////////////////////////////////////////////
	// PHP'S COUNTABLE - GET THE NUMBER OF ROWS FROM THIS RESULT
	// http://php.net/manual/en/countable.count.php
	////////////////////////////////////////////////////////////////////////////
	public function _count() {
		return is_array($this->array) ? count($this->array) : 0;
	}




	////////////////////////////////////////////////////////////////////////////
	// GET THE NUMBER OF FIELD COLUMNS IN THIS RESULT
	////////////////////////////////////////////////////////////////////////////
	public function fields() {
		if (!is_array($this->array)) return false;
		$array = current($this->array);
		return is_array($array) ? count($array) : false;
	}




	////////////////////////////////////////////////////////////////////////////
	// GET DETAILS ON ALL FIELD COLUMNS IN THIS RESULT
	////////////////////////////////////////////////////////////////////////////
	public function listFields() {
		if (!is_null($this->keys)) return $this->keys;
		if (!is_array($this->array)) return false;

		$array				= current($this->array);
		if ($array instanceof pudlObject) {
			$array			= $array->raw();
		}

		$this->keys			= [];
		$keys				= array_keys((array)$array);

		if (!is_array($keys)) return false;

		foreach ($keys as $item) {
			$this->keys[]	= (object)['name' => $item];
		}

		return $this->keys;
	}




	////////////////////////////////////////////////////////////////////////////
	// GET DETAILS ON A PARTICULAR FIELD COLUMN IN THIS RESULT
	////////////////////////////////////////////////////////////////////////////
	public function getField($column) {
		$fields = $this->listFields();
		if (!is_array($fields)) return false;
		if (!array_key_exists($column, $fields)) return false;
		return $fields[$column];
	}




	////////////////////////////////////////////////////////////////////////////
	// PHP'S SEEKABLEITERATOR - JUMP TO A ROW IN THIS RESULT
	// http://php.net/manual/en/seekableiterator.seek.php
	////////////////////////////////////////////////////////////////////////////
	public function _seek($row) {
		if (!is_array($this->array)) return;
		if ($row < 0  ||  $row >= count($this->array)) return;
		$this->pos = $row;
	}




	////////////////////////////////////////////////////////////////////////////
	// MOVE TO THE NEXT ROW IN THIS RESULT AND RETURN THAT ROW'S DATA
	////////////////////////////////////////////////////////////////////////////
	public function row() {
		if (!is_array($this->array)) return false;

		return ($this->pos++ === 0)
			? current($this->array)
			: next($this->array);
	}




	////////////////////////////////////////////////////////////////////////////
	// GET THE ERROR CODE FOR THIS RESULT
	////////////////////////////////////////////////////////////////////////////
	public function errno() {
		return 0;
	}




	////////////////////////////////////////////////////////////////////////////
	// GET THE ERROR MESSAGE FOR THIS RESULT
	////////////////////////////////////////////////////////////////////////////
	public function error() {
		return '';
	}





	////////////////////////////////////////////////////////////////////////////
	// MEMBER VARIABLES
	////////////////////////////////////////////////////////////////////////////
	/** @var array|false */		private $array	= false;
	/** @var ?array */			private $keys	= NULL;
	/** @var int */				private $pos	= 0;
}
